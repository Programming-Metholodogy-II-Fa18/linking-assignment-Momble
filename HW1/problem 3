public class main {
	
	public static void main(String args[]) {
		
	}
}
class Node
{
	public int data;
	Node next;
	
	public Node (int key)
	{
		data = key;
		next = null;
	}
	public void displayN() {
		System.out.println(data);
	}
}
class linkedlist{
	public Node first;
	public linkedlist()
	{
		first = null;
	}
	public void insert(int x)
	{
		Node newN = new Node(x);
		newN.next = first;
		first = newN; 
	}
	public Node delete() {
		Node temp;
		temp = first;
		first =first.next;
		return temp;
	}
	public void display()
	{
		while(first != null)
		{
			first.displayN();
			first = first.next;
		}
		System.out.println(" ");
	}
	public int read()
	{
		return first.data;
	}
}
class stack
{
	private linkedlist obj;
	public stack()
	{
		obj = new linkedlist();
	}
	public void push(int i)
	{
		obj.insert(i);
	}
	public Node pop()
	{
		return obj.delete();
	}
	public void displaystack()
	{
		obj.display();
	}
	public void insertionsort(Node firstref)
	{
		sorted = null;
		Node current = firstref;
		while(current != null)
		
		{
			Node next = current.next;
			sortedinsert(current);
			current = next;
		}
		obj.first = sorted;
	}
	public void sortedinsertion(Node Newn)
	{
		if (sorted == null || sorted.data >= Newn.data)  
        	{ 
			Newn.next = sorted; 
            		sorted = Newn; 
        	} 
        	else 
        	{ 
                     Node current = sorted; 
                     while (current.next != null && current.next.data < Newn.data)  
                     { 
                     current = current.next; 
                     } 
                     Newn.next = current.next; 
                     current.next = Newn; 
                } 
	}
	public int peek()
	{
		return obj.read();
	}
}
